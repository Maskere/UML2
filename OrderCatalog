using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PizzaStore
{
    public class OrderCatalog
    {
        List<Order> Order;
        CustomerCatalog Customers;
        PizzaCatalog Pizzas;
        Customer _customer;
        Pizza _pizza;
        public OrderCatalog() 
        {
            Order = new List<Order>(new Order[10]);
            Customers = new CustomerCatalog();
            Pizzas = new PizzaCatalog();
            _customer = new Customer("",0);
            _pizza = new Pizza("",0,0);
        }
        public int Count
        {
            get { return Order.Count; }
        }
        public Customer Customer { get { return _customer; } }
        public Pizza Pizza { get {  return _pizza; } }
        public Order GetNewOrderFromExisting(Customer customer,Pizza pizza,int noOfPizzasInOrder, int orderId)
        {
            Order order = new Order(customer,pizza,noOfPizzasInOrder,orderId);
            if (Order.Contains(order)) { Console.WriteLine($"An order with id:{orderId} already exist"); return null; }
            return order;
        }
        public Order GetNewOrder(Customer customer, Pizza pizza, int noOfPizzasInOrder,int orderId) 
        {
            Order order = new Order(customer,pizza,noOfPizzasInOrder,orderId);
            return order;
        }
        public void AddAnOrderToTheList(Order order)
        {
            if (Order.Contains(order)) { Console.WriteLine($"An order with id:{order.OrderId} already exist"); return; }
            Order.Insert(order.OrderId, order);
        }
        //public void DeleteAnOrder(int OrderId)
        //{
        //    Console.WriteLine("Enter");
        //    Order.Insert(OrderId, new Order(Customers.DeleteACustomer(),Pizzas.DeleteAPizza(), OrderId));
        //    Order.RemoveAt(OrderId + 1);
        //}
        public Order SeachForOrderById(int orderId)
        {
            Order findOrder = Order[orderId];
            return findOrder;
        }
        public Order UpdateOrder(int orderId)
        {
            Order order = new Order(Customers.GetNewCustomer(), Pizzas.GetNewPizza(),0,orderId);
            return order;
        }
        //public Customer SearchCustomerByName(string customerName)
        //{
        //    foreach (Customer customer in Customers) 
        //    {
        //        Console.WriteLine($"\nFind: customer by name \"{customerName}\":{0}", Customers.Find(x => x.CustomerName.Contains(customerName))) ;
        //    }
        //    return 
        //}
        public void Clear()
        {
            Order.Clear();
            Order = new List<Order>(new Order[10]);
        }
        public void RemoveAt(int removeAt)
        {
            Order.RemoveAt(removeAt);
        }
        public void PrintOrderList()
        {
            Console.WriteLine($"There are {Order.Count} items on the list");
            foreach (Order order in Order)
            {
                if (order != null)
                {
                    Console.WriteLine($"| {order} |");
                }
                else
                {
                    Console.WriteLine("   ...");
                }
            }
        }
    }
}
