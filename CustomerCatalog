using System;
using System.Collections.Generic;
using System.ComponentModel.Design;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace PizzaStore
{
    public class CustomerCatalog
    {
        List<Customer> Customers;
        public CustomerCatalog() 
        {
            new Customer("", 0);
            Customers = new List<Customer>(new Customer[10]);
        }
        public int Count
        {
            get { return Customers.Count; }
        }
        public Customer GetNewCustomer() 
        {
            Console.WriteLine("Enter the customer name: ");
            string customerName = Console.ReadLine();
            Customer customer = new Customer(customerName,0);
            Console.WriteLine("Enter a customer ID: ");
            string input = Console.ReadLine();
            int inputResult = int.Parse(input);
            customer.CustomerId = inputResult;
            return customer;
        }
        public void CreateACustomer(Customer customer)
        {
            Customers.Insert(customer.CustomerId, customer);
        }
        public void DeleteACustomer(int CustomerId)
        {
            Customers.Insert(CustomerId, new Customer("",CustomerId));
            Customers.RemoveAt(CustomerId + 1);
        }
        public Customer SeachForCustomerById(int customerId) 
        {
            Customer findCustomer = Customers[customerId];
            return findCustomer; 
        }
        public void UpdateCustomer(Customer updatedCustomer)
        {
            if (Customers.Contains(updatedCustomer)) 
            {
                Console.WriteLine("Customer does not exist");
            } 
            else
            {
                Customers.RemoveAt(updatedCustomer.CustomerId);
                Customers.Insert(updatedCustomer.CustomerId, updatedCustomer);
            }
        }
        public Customer SearchCustomerByName(string customerName)
        {
            foreach (Customer customer in Customers)
            {
                for (int i = 0; i < Customers.Count; i++)
                {
                    if (Customers[i].CustomerName == customerName)
                        return Customers[i];
                }
            }
            return ;
        }
        public void Clear()
        {
            Customers.Clear();
            Customers = new List<Customer>(new Customer[10]);
        }
        public void RemoveAt(int removeAt)
        {
            Customers.RemoveAt(removeAt);
        }
        public void PrintCustomerList()
        {
            Console.WriteLine($"There are {Customers.Count} items on the list");
            foreach (Customer customer in Customers)
            {
                if (customer != null)
                {
                    Console.WriteLine($"| {customer.CustomerId} {customer} |");
                }
                else
                {
                    Console.WriteLine("   ...");
                }
            }
        }
    }
}
